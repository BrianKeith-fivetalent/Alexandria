AWSTemplateFormatVersion: "2010-09-09"
Description: The CloudFormation template for the Fargate ECS Cluster.
# ----------------------------------------------------------------------------------------
# - Author: Brian Keith
# - Date: 12 AUG 2020
# - Name: CF_acloudguru_FargetCluster2.yml
# - Title: Fargate
# - Version: 0.1
# - Purpose: Creates an ecs Fargate Cluster
# -
# - ASSUMPTIONS: Run the following first
# -         CF_acloudguru_IAM.yml
# -         CF_acloudguru_network.yml
# -         CF_acloudguru_CICD.yml
# - 
# ----------------------------------------------------------------------------------------- 
Parameters:
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select at two subnets in your selected VPC.
  VpcId1:
    Type: AWS::EC2::VPC::Id
    Description: Select a VPC that allows instances access to the Internet.
  pStageCPU:
    Type: Number
    Description: CPU value for the stage ecs FarGate cluster
    Default: 2048
  pStageMem:
    Type: Number
    Description: Mem value for the stage ecs FarGate cluster
    Default: 4096
  pProdCPU:
    Type: Number
    Description: CPU value for the stage ecs FarGate cluster
    Default: 2048
  pProdMem:
    Type: Number
    Description: Mem value for the stage ecs FarGate cluster
    Default: 4096


Resources:
  ClusterProd:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: fg-acg-external-web-prod
  ClusterStage:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: fg-acg-external-web-staging
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: acloudguruloggroup 
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: fargate-execution-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  ContainerSecurityGroup3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ContainerSecurityGroup3
      GroupDescription: Security group for NGINX container
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId1
#ecs Task for Prod
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: deployment-example-task
      Cpu: !Ref pProdCPU
      Memory: !Ref pProdMem
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: deployment-example-container
          Image: nginx:1.17.7
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
        - FARGATE
#ecs Task for stage
  TaskDefinitionStage01:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: fg-acg-externalsite-web
      Cpu: !Ref pStageCPU
      Memory: !Ref pStageMem
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      ContainerDefinitions:
        - Name: fg_acg_externalsite_web
          Image: 770822739552.dkr.ecr.us-west-2.amazonaws.com/fg_acg_externalsite_web:latest
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - EC2
        - FARGATE
#Service for Prod Cluster
  ServiceProd:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: fg-acg-production-service
      Cluster: !Ref ClusterProd
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 2
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetId
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup3.GroupId

#Service for Staging Cluster
  ServiceWeb:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: fg-acg-externalsite-web
      Cluster: !Ref ClusterStage
      TaskDefinition: !Ref TaskDefinitionStage01
      DesiredCount: 2
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetId
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup3.GroupId